from random import shuffle as sf    # shuffle category and words
from time import sleep as sp    # Delay before running next code
from base64 import b64decode as de  # Decode words

input()
print('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î')
sp(2)
print('‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡πà‡∏≠‡∏ô!!')
sp(3)
print('‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô')
sp(1.5)
print('‡πÄ‡∏Å‡∏°')
sp(1)
print('‡∏Å‡∏≤‡∏Å')
sp(2.5)
print('‡∏£‡∏±‡∏ô‡∏ï‡πà‡∏≠...')
sp(1.5)
print('‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏Å‡∏°')
sp(3)


score = 0
lives = 5
‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô = score
‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï = lives


prefix_score = '‚Å†‚≠ê '
prefix_lives = 'üíö '
‡∏ñ‡∏π‡∏Å = '‚úÖ '
‡∏ú‡∏¥‡∏î = '‚ùå '
‡∏ä‡∏ô‡∏∞ = 'üéâ '
‡πÅ‡∏û‡πâ = '(‚Å†Íèø‚Å†Ôπè‚Å†Íèø‚Å†;‚Å†) '
‡∏£‡∏≠ = '‚Å†‚óè'
‡πÄ‡∏™‡πâ‡∏ô =  "_"
‡πÄ‡∏ß‡πâ‡∏ô = '\n'

code1 = """ewogICAgCiAgICAn4Liq4Lix4LiV4Lin4LmMJyA6IHsKICAgICAgICAn4LiK4LmJ4Liy4LiHJzpbJ+C4oeC4teC5gOC4guC4teC5ieC4ouC4p+C5g+C4leC5ieC4h+C4p+C4hyddLAogICAgICAgICfguITguYnguLLguIfguITguL
LguKcnOlsn4Lit4Lii4Li54LmI4LmD4LiZIERDJ10sCiAgICAgICAgJ+C5geC4oeC4pyc6Wyc54LiK4Li14Lin4Li04LiVJ10sCiAgICAgICAgJ+C4h+C4ueC5gOC4q+C5iOC4sic6WyfguYDguKvguKHguLfguK3guJnguIjguLDguYDguKvguYjguLIg4LmB4LiV4LmI4LmA4Lir4LmI4Liy4LmE4Lih4LmI4LmE4LiU4LmJJ10sCiAgICAgICAgJ+C4meC4geC5geC4geC5ieC4pyc6WyfguKrguLHguJXguKfguYzguYDguKXguLXguYnguKLguIcg4Lie4Li54LiU4LmE4LiU4LmJJ10sCiAgICAgICAgJ+C4ouC4teC4o+C4suC4nyc6WyfguIHguLTguJnguYPguJrguYTguKHguYnguIjguLLguIHguJXguYnguJnguYTguKHguYnguKrguLnguIfguYbguYTguJTguYkg4LmC4LiU4Lii4LmE4Lih4LmI4LiV4LmJ4Lit4LiH4Lib4Li14LiZJ10sCiAgICAgICAgJ+C4iuC4teC4leC5ieC4suC4o+C5jCc6WyfguKfguLTguYjguIfguYDguKPguYfguKfguJfguLXguYjguKrguLjguJTguYPguJnguYLguKXguIEnXSwKICAgICAgICAn4LiZ4LiB4LiB4Lij4Liw4LiI4Lit4LiB4LmA4LiX4LioJzpbJ+C4meC4geC4l+C4teC5iOC4p+C4tOC5iOC4h+C5gOC4o+C5h+C4p+C4l+C4teC5iOC4quC4uOC4lCddLAogICAgfSwKICAgIAogICAgJ+C4quC4tScgOiB7CiAgICAgICAgJ+C5geC4lOC4hyc6WyfguKrguLXguJfguLXguYjguILguLLguJTguYTguKHguYjguYTguJTguYnguYPguJnguKvguJnguLHguIfguYHguJnguKfguIbguLLguJXguIHguKMnXSwKICAgICAgICAn4LiU4LizJzpbJ+C4m+C4tOC4lOC5hOC4nyddLAogICAgICAgICfguILguLLguKcnOlsn4Liq4Liw4Lit4Liy4LiUJ10sCiAgICAgICAgJ+C5gOC4guC4teC4ouC4pyc6WyfguYDguKXguLfguK3guJTguILguK3guIfguKPguJQu4LiV4Lit4LiZ4LmA4LiC4LmJ4Liy4LiE4LmI4Liy4LiiJ10sCiAgICAgICAgJ+C4n+C5ieC4sic6WyfguJfguYnguK3guIfguJ/guYnguLInXSwKICAgICAgICAn4LiX4Lit4LiHJzpbJ+C4quC4teC4l+C4reC4hyddLAogICAgICAgICfguYDguIfguLTguJknOlsn4Liq4Li14LmA4LiH4Li04LiZJ10sCiAgICAgICAgJ+C4meC5ieC4s+C4leC4suC4pSc6WyfguYTguKHguYknXSwKICAgIH0sCiAgICAKICAgICfguJzguKXguYTguKHguYknIDogewogICAgICAgICfguYHguK3guJvguYDguJvguLTguKUnOlsnVGhpcyBpcyBhIHBlbiddLAogICAgICAgICfguIrguKHguJ7guLnguYgnOlsn4LiE4Lil4LmJ4Liy4Lii4LiB4Lix4Lia4Liq4Li14LmG4LiZ4Li24LiHJ10sCiAgICAgICAgJ+C5geC4leC4h+C5guC4oSc6WyfguYLguK3guYkhIOC4meC4seC5iOC4meC4oeC4seC4meC4muC4seC4gSddLAogICAgICAgICfguIHguKXguYnguKfguKInOlsn4LiW4LmJ4Liy4LiZ4Li24LiB4LiW4Li24LiH4Lil4Li04LiHJ10sCiAgICAgICAgJ+C4quC4seC4m+C4sOC4o+C4lCc6WyfguJXguLLguKPguK3guJrguJXguLHguKcnXSwKICAgICAgICAn4Lih4Liw4Lih4LmI4Lin4LiH4LmA4Lia4LiyJzpbJ+C4oeC4sOC4oeC5iOC4p+C4h+C5hOC4oeC5iOC4q+C4meC4seC4gSddLAogICAgICAgICc5JzpbJ+C4nOC4peC5hOC4oeC5ieC4leC4o+C4sOC4geC4ueC4peC5gOC4muC4reC4o+C5jOC4o+C4teC5iOC4oeC4teC4geC4teC5iOC4iuC4meC4tOC4lCddLAogICAgfQoKICAgIH0KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgIAo=

"""
code2 = """cGFuZwoKCg==

"""
secret = de(code2).decode('utf-8')
print(type(secret))
code3 = """4Lij4Lir4Lix4Liq4Lil4Lix4Lia4Liq4Li44LiU4Lii4Lit4LiU

"""
code4 = """4LiE4Li44LiT4LmE4LiU4LmJ4Lij4Lix4Lia4LmC4Lia4LiZ4Lix4Liq4Lie4Li04LmA4Lio4Lip

"""


def get_word(): # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ
    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô
    
    global words # set ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡πÑ‡∏î‡πâ
    
    words  = eval(de(code1).decode('utf-8'))

   
    # ‡∏à‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô
‡∏£‡∏≠‡∏ö = 1
LF = False
run = True
while run == True: # while True ‡∏•‡∏π‡∏õ‡∏ô‡∏¥‡∏£‡∏±‡∏ô‡∏î‡∏£‡πå
    # ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏π‡∏õ
    login = False
    start = False
    get_word()

    all_keys = ['‡∏™‡∏±‡∏ï‡∏ß‡πå', '‡∏™‡∏µ', '‡∏ú‡∏•‡πÑ‡∏°‡πâ']

    
    if ‡∏£‡∏≠‡∏ö == 1:
        if ‡∏£‡∏≠‡∏ö == 1 :
            print(‡πÄ‡∏ß‡πâ‡∏ô * 80)
            fn_login = input('‡∏û‡∏¥‡∏°‡∏û‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏•‡∏±‡∏ö(‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)\n:: ')  # ‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ó pass ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô

        if 'dx1' in fn_login:
            print(‡∏£‡∏≠ * 1)
            sp(0.5)
            print(‡∏£‡∏≠ * 2)
            sp(0.5)
            print(‡∏£‡∏≠ * 3)
            sp(0.5)
            print('‡πÇ‡∏Ñ‡πâ‡∏î‡∏•‡∏±‡∏ö‡∏Ñ‡∏∑‡∏≠ dx1')
            sp(1)
            print(‡∏£‡∏≠ * 4)
            sp(2)
            print("„Éº„Éº„Éº„Éº„Éº„Éº\nWHU'S UP BRO\n„Éº„Éº„Éº„Éº„Éº„Éº")
            sp(2)
            ‡∏£‡∏≠‡∏ö = 99
            login = True
            continue
        if 'pg' in fn_login:
            print(‡∏£‡∏≠ * 1)
            sp(0.5)
            print(‡∏£‡∏≠ * 2)
            sp(0.5)
            print(‡∏£‡∏≠ * 3)
            sp(0.5)
            print('‡πÇ‡∏Ñ‡πâ‡∏î‡∏•‡∏±‡∏ö‡∏Ñ‡∏∑‡∏≠ PG')
            sp(1)
            print(‡∏£‡∏≠ * 4)
            sp(2)
            print("„Éº„Éº„Éº„Éº„Éº„Éº\n‡πÅ‡∏ï‡∏Å‡∏¢‡∏±‡∏á\n„Éº„Éº„Éº„Éº„Éº„Éº")
            sp(2)
            ‡∏£‡∏≠‡∏ö = 99
            login = True
            continue
        if 'pang' in fn_login  :
            print(‡∏£‡∏≠ * 1)
            sp(0.5)
            print(‡∏£‡∏≠ * 2)
            sp(0.5)
            print(‡∏£‡∏≠ * 3)
            sp(0.5)
            print(de(code3).decode('utf-8'))
            sp(1)
            print(‡∏£‡∏≠ * 4)
            sp(2)
            print("„Éº„Éº„Éº„Éº„Éº„Éº\n",(de(code4).decode('utf-8')),"\n„Éº„Éº„Éº„Éº„Éº„Éº")
            sp(2)
            lives = 7
            ‡∏£‡∏≠‡∏ö = 99
            login = True
            continue
             
        elif 'end' in fn_login:
                            print('\n‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏°...')
                            sp(3)
                            ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå = False    
                            start = False            
                            login = False
                            run = False
                            break
        else:
        # if fn_login not in 'end' or 'pg' or 'dx1'  :
            print(‡∏£‡∏≠ * 1)
            sp(0.5)
            print(‡∏£‡∏≠ * 2)
            sp(0.5)
            print(‡∏£‡∏≠ * 3)
            sp(1)
            print('‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î‡∏•‡∏±‡∏ö ',fn_login)        
            sp(1)
            print(‡∏£‡∏≠ * 4)        
            sp(2)
        
    login = True

    while login == True:
            # while login   ‡πÄ‡∏£‡∏¥‡πà‡∏°

            ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå = False
            st = input('\n‡∏û‡∏¥‡∏°‡∏û‡πå 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° \n:: ')
            if 'end' in st:
                            print('\n‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏°...')
                            sp(3)
                            ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå = False    
                            start = False            
                            login = False
                            run = False
                            break
            if st == '1':
                start = True
            else:
                sp(2)
                print(‡πÄ‡∏ß‡πâ‡∏ô * 80,‡∏ú‡∏¥‡∏î, '‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå 1 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà (‚Å†‚òû‚Å† ‚Å†‡≤†‚Å†_‚Å†‡≤†‚Å†)‚Å†‚òû ', st, '\n')
                start = False

            while start == True:
                # while start   ‡πÄ‡∏£‡∏¥‡πà‡∏°
                print('\n‡πÄ‡∏Å‡∏°‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å...')
                sp(1)
                print('\n3')
                sp(1)
                print('\n2')
                sp(1)
                print('\n1')
                sp(1)
                print('\n‡πÄ‡∏£‡∏¥‡πà‡∏°!')
                sp(1)


                ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå = True
                while ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå == True:
                    sf(all_keys)
                    category = all_keys.pop()
                    keys = list(words[category].keys())

                    while len(keys) > 0: # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏°‡∏±‡πâ‡∏¢
                        # while len keys    ‡πÄ‡∏£‡∏¥‡πà‡∏°
                        ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô = score
                        def get_new_key():
                            sf(keys)
                            sf(keys)
                            Answer = keys.pop()
                            print(‡πÄ‡∏ß‡πâ‡∏ô * 80,‡πÄ‡∏™‡πâ‡∏ô * 12,'\n')
                            print('\n‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï: ', prefix_lives * lives)
                            print('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: ',  str(score))
                            print(‡πÄ‡∏™‡πâ‡∏ô * 12,'\n')
                            print('‡∏´‡∏°‡∏ß‡∏î: ', category)
                            print('‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ: ', '|'.join(words[category][Answer]))
                            print(‡πÄ‡∏™‡πâ‡∏ô * 12,'\n')
                            return Answer

                        Answer = get_new_key()


                        Ans = input('‡∏ï‡∏≠‡∏ö:: ')

                        if 'end' in Ans:
                            print('\n‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏°...')
                            sp(3)
                            ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå = False    
                            start = False            
                            login = False
                            run = False
                            break

                        if Ans == Answer:
                            win = True
                        if Ans != Answer:
                            win = False

                        print('‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö...\n',‡πÄ‡∏™‡πâ‡∏ô * 12,‡πÄ‡∏ß‡πâ‡∏ô)
                        sp(2)

                        if win == True:
                            print(‡∏ñ‡∏π‡∏Å,'‡πÉ‡∏ä‡πà‡πÅ‡∏•‡πâ‡∏ß! ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∑‡∏≠: ',Answer)
                            print('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô +1',)
                            score = score + 1
                            sp(3)
                            # continue

                        if win == False:
                            print(‡∏ú‡∏¥‡∏î, '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å')
                            print('‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï -1', prefix_lives)
                            lives = lives - 1
                            sp(3)
                            # continue



                        if lives < 1:  # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"‡∏´‡∏°‡∏ß‡∏î"‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡∏£‡∏∂‡∏¢‡∏±‡∏á
                            print(‡∏ú‡∏¥‡∏î + '\n\n‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏ß ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏∞‡∏´‡∏°‡∏î...', ‡πÅ‡∏û‡πâ)
                            login = False
                            start = False
                            ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå = False
                            sp(3)
                            print('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: ',  ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô)
                            sp(5)
                            break
                        
                        # if len(all_keys) > 0:  # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"‡∏´‡∏°‡∏ß‡∏î"‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡∏£‡∏∂‡∏¢‡∏±‡∏á
                        #     continue
                        if len(all_keys) < 1:  # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"‡∏´‡∏°‡∏ß‡∏î"‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡∏£‡∏∂‡∏¢‡∏±‡∏á
                            if len(keys) < 1:     
                                print('\n\n‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏ß ‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å!', ‡∏ä‡∏ô‡∏∞)
                                login = False
                                start = False
                                ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå = False
                                sp(3)
                                print('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: ', prefix_score * ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô)
                                sp(5)
                                break

                        continue

                        # while len keys    ‡∏à‡∏ö

                # while start   ‡∏à‡∏ö

            # while login   ‡∏à‡∏ö

        # ‡∏à‡∏∏‡∏î‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏•‡∏π‡∏õ
